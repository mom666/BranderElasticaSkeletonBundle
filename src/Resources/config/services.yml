parameters:
#  brander_elastica_skeleton.example.class:
#    Brander\Bundle\ElasticaSkeletonBundle\Example
  brander.bundle.elasticaskeleton.annotaton.driver.class:
    Brander\Bundle\ElasticaSkeletonBundle\Service\Annotation\AnnotationDriver
  brander.bundle.elasticaskeleton.metadata_factory.class:
    Brander\Bundle\ElasticaSkeletonBundle\Service\Annotation\ElasticaMetadataFactory
  brander.bundle.elasticaskeleton.cacher.class:
    Metadata\Cache\DoctrineCacheAdapter
  brander.bundle.elasticaskeleton.list.class:
    Brander\Bundle\ElasticaSkeletonBundle\Service\Elastica\ElasticaList
  brander.bundle.elasticaskeleton.deserializeparamconverter.class:
    Brander\Bundle\ElasticaSkeletonBundle\Service\DeserializeParamConverter

services:
  brander.bundle.elasticaskeleton.annotaton.driver:
    class: "%brander.bundle.elasticaskeleton.annotaton.driver.class%"
    arguments:
      - "@annotations.cached_reader"

  brander.bundle.elasticaskeleton.metadata_factory:
    class: "%brander.bundle.elasticaskeleton.metadata_factory.class%"
    arguments:
      - "@brander.bundle.elasticaskeleton.annotaton.driver"
    calls:
      - [setCache, ["@brander.bundle.elasticaskeleton.cacher"]]

  brander.bundle.elasticaskeleton.cacher:
    class: "%brander.bundle.elasticaskeleton.cacher.class%"
    arguments:
      - "elastica_query_metadata"
      - "@brander.bundle.elasticaskeleton.cache_storage"

  brander.bundle.elasticaskeleton.list:
    class: "%brander.bundle.elasticaskeleton.list.class%"
    abstract: true
    calls:
      - [setMetadataFactory, ["@brander.bundle.elasticaskeleton.metadata_factory"]]

  brander.bundle.elasticaskeleton.deserializeparamconverter:
    class: "%brander.bundle.elasticaskeleton.deserializeparamconverter.class%"
    arguments:
      - "@serializer"
    tags:
      - { name: request.param_converter, priority: -2, converter: query_deserializer }