parameters:
#  brander_elastica_skeleton.example.class:
#    Brander\Bundle\ElasticaSkeletonBundle\Example
  brander.bundle.elasticaskeleton.annotaton.driver.class:
    Brander\Bundle\ElasticaSkeletonBundle\Service\Annotation\AnnotationDriver

services:
#  brander_elastica_skeleton.example:
#    class: %brander_elastica_skeleton.example.class%
# this service for test only. todo: move to user bundle

# ------- example ---------
#  iwin_user.elastica_query.user:
#    class: Iwin\Bundle\UserBundle\Entity\Query\UserElasticaList
#    parent: brander.bundle.elasticaskeleton.list
#    arguments:
#      - @fos_elastica.finder.iwin_user.user

###
  brander.bundle.elasticaskeleton.annotaton.driver:
    class: %brander.bundle.elasticaskeleton.annotaton.driver.class%
    arguments:
      - @annotations.cached_reader

  brander.bundle.elasticaskeleton.metadata_factory:
    class: Brander\Bundle\ElasticaSkeletonBundle\Service\Annotation\ElasticaMetadataFactory
    arguments:
      - @brander.bundle.elasticaskeleton.annotaton.driver
    calls:
      - [setCache, ["@brander.bundle.elasticaskeleton.cacher"]]

  brander.bundle.elasticaskeleton.cacher:
    class: Metadata\Cache\DoctrineCacheAdapter
    arguments:
      - "elastica_query_metadata"
      - @werkint.redis.doctrinecacher

  brander.bundle.elasticaskeleton.list:
    class: Brander\Bundle\ElasticaSkeletonBundle\Service\Elastica\ElasticaList
    abstract: true
    calls:
      - [setMetadataFactory, ["@brander.bundle.elasticaskeleton.metadata_factory"]]

  brander.bundle.elasticaskeleton.deserializeparamconverter:
    class: Brander\Bundle\ElasticaSkeletonBundle\Service\DeserializeParamConverter
    arguments:
      - @serializer
    tags:
      - { name: request.param_converter, priority: -2, converter: query_deserializer }